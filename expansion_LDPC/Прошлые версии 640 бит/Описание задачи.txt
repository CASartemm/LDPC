имеется файл base_rows (20 строк и 128 столбцов ). с помощью четырех сдвиговых регистров мы получаем 640 строчек и 128 столбцов , base_rows Как раз каждый блок 32х32 реализуется сдвиговым регистром.

далее у нас есть входной вектор 640 бит , мы умножаем каждый бит на каждую строчку полной матрицы (640 сток 128 столбцов ) а именно : первый бит входног вектора на первую строчку матрицы 640 на 128 . 


далее мы получаем вектор длиной 128 столбцов  . умножаем второй бит входного вектора 640 бит на матрицу 640 на 128 , получаем вторую строчку длинной 128 бит . 
далее между строчками деаем XOR и получается одна строчка . 

так нужно перемножить все строчки и получить одну строчку на выходе длинной 128 бит 
---------------------------------------------------------------------------------

все работает по axi stream протоколу 

1) из файла берется последовательность 640 бит. 

2) base_rows (20 строк и 128 столбцов ). с помощью четырех сдвиговых регистров мы получаем 
640 строчек и 128 столбцов , base_rows Как раз каждый блок 32х32 реализуется сдвиговым регистром.
сдвиг происходит вправо .

3) последовательность 640 бит так же берется из файла , за один такт первый бит умножается на первую строку созданной матрицы 640 строк 128 столбцов. 
получается вектор 128 бит . 2й бит вектора 640 бит умножается на вторую строчку матрицы 640 строк 128 стобцов . 
и так далее все 640 бит.

4) первая строчка выхода вектра 128 бит делает XOR с второй строчкой выхода вектора 128 бит , и так далее 
в результате получается одна строчка 128 бит .